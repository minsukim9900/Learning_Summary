package test01_polymorphism;

public class Test {
	//다형성
	//1. 상속 관계에 있을 때,
	// 조상클래스의 타입으로, 자손 클래스의 객체를 참조할 수 있다.
	public static void main(String[] args) {
		Student st = new Student();
		Person p = new Student();
		Object obj = new Student();
		
		// 관점을 바꾼닥고 하여도, 실제 메모리에 생성된 인스턴스는
		// 변함이 없다.
		// 관점만 바뀐 것임(접근 범위만 달라졌다.)
		// - 부모 클래스에 정의된 메서드, 변수만 접근 가능하다.
		// - 실제 메모리에 올라와 있는 객체는 더 많은 메서드와
		// 멤버 변수가 있더라도 접근 불가능하다.
		
		
		// 2. 동적 바인딩
		// - 상속을 하면서, 자손 클래스에서 오버라이드 한 상황
		// - 타입과 관계없이 실제 객체가 가진 메서드가 호출된다.
		// - 타입과 관계 없이 실제 객체의 행위를 한다.
		// - 타입만 가지고 판단하지 않는다.
		st.eat();
		p.eat();
		
		//학생을 사람이라는 박스에 넣었더라도, 여전히 학생
		// 소, 개, 고양이 -> 동물이라는 박스에 넣어도
		// 각각은 여전히 소, 개, 고양이다.
	}
	
}
